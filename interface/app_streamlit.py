import streamlit as st
from utils.gerador import gerar_conteudo
from utils.exportador_docx import exportar_para_docx

st.set_page_config(page_title="Agente SENAI - Gerador de Conte√∫dos Educacionais", layout="wide")
st.title("ü§ñ Agente SENAI ‚Äì Gera√ß√£o de Planos e Avalia√ß√µes")

aba = st.sidebar.radio("Escolha o que deseja gerar:", ["Plano de Ensino", "Plano de Aula", "Avalia√ß√µes"])

if aba == "Plano de Ensino":
    st.header("üìò Gerador de Plano de Ensino")
    disciplina = st.text_input("Disciplina:")
    carga_horaria = st.number_input("Carga Hor√°ria Total (em horas)", 1, 200)
    competencias = st.text_area("Compet√™ncias a serem desenvolvidas:")
    publico_alvo = st.text_area("Perfil da turma ou p√∫blico-alvo:")

    if st.button("Gerar Plano de Ensino"):
        prompt = f"""
Voc√™ √© um especialista na Metodologia SENAI e deve gerar um PLANO DE ENSINO estruturado para a seguinte disciplina:

Disciplina: {disciplina}
Carga Hor√°ria: {carga_horaria} horas
Compet√™ncias: {competencias}
P√∫blico-alvo: {publico_alvo}

Estruture o plano com: objetivos de aprendizagem, conte√∫do program√°tico, estrat√©gias metodol√≥gicas SENAI, crit√©rios de avalia√ß√£o e produtos esperados.
"""
        resposta = gerar_conteudo(prompt)
        st.text_area("Plano de Ensino Gerado:", resposta, height=400)

        if st.button("üì• Baixar em .docx"):
            caminho = exportar_para_docx(resposta, titulo="plano_ensino")
            with open(caminho, "rb") as f:
                st.download_button("Clique para baixar", f, file_name="plano_ensino.docx")

elif aba == "Plano de Aula":
    st.header("üìã Gerador de Plano de Aula")
    tema = st.text_input("Tema da Aula:")
    duracao = st.number_input("Dura√ß√£o da Aula (em horas)", 1, 8)
    objetivos = st.text_area("Objetivos de Aprendizagem:")
    metodologia = st.text_area("Estrat√©gias Metodol√≥gicas (pode deixar em branco para aplicar SENAI padr√£o):")

    if st.button("Gerar Plano de Aula"):
        prompt = f"""
Gere um PLANO DE AULA com base na Metodologia SENAI para:

Tema: {tema}
Dura√ß√£o: {duracao} horas
Objetivos: {objetivos}
Estrat√©gias Metodol√≥gicas: {metodologia or 'Aplique a Metodologia SENAI com foco em metodologias ativas.'}

O plano deve conter: etapas da aula com tempos, conte√∫do, estrat√©gias, produtos esperados e crit√©rios de avalia√ß√£o.
"""
        resposta = gerar_conteudo(prompt)
        st.text_area("Plano de Aula Gerado:", resposta, height=400)

        if st.button("üì• Baixar em .docx"):
            caminho = exportar_para_docx(resposta, titulo="plano_aula")
            with open(caminho, "rb") as f:
                st.download_button("Clique para baixar", f, file_name="plano_aula.docx")

elif aba == "Avalia√ß√µes":
    st.header("üìù Gerador de Avalia√ß√µes")
    tema = st.text_input("Tema da Avalia√ß√£o:")
    disciplina = st.text_input("Disciplina:")
    nivel = st.selectbox("N√≠vel da quest√£o (Taxonomia de Bloom):", ["Conhecer", "Compreender", "Aplicar", "Analisar", "Avaliar", "Criar"])
    qtd = st.slider("N√∫mero de Quest√µes:", 1, 20, 5)

    if st.button("Gerar Avalia√ß√£o"):
        prompt = f"""
Gere {qtd} quest√µes objetivas sobre o tema "{tema}" da disciplina "{disciplina}" seguindo a Metodologia SENAI. 
Use crit√©rios da Taxonomia de Bloom (n√≠vel: {nivel}) e estrutura conforme o padr√£o da Teoria de Resposta ao Item (TRI), 
com 4 alternativas e feedback individual por alternativa. Gere em formato texto estruturado.
"""
        resposta = gerar_conteudo(prompt)
        st.text_area("Avalia√ß√£o Gerada:", resposta, height=400)

        if st.button("üì• Baixar em .docx"):
            caminho = exportar_para_docx(resposta, titulo="avaliacoes")
            with open(caminho, "rb") as f:
                st.download_button("Clique para baixar", f, file_name="avaliacoes.docx")

st.markdown("---")
st.caption("Desenvolvido para aplica√ß√£o da Metodologia SENAI com apoio de IA ‚ú®")
